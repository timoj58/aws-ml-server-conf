node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tensors/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "cce3d4f3-7c66-486c-bfbc-98c74f225a44"
        string_val: "46df5355-cd91-4039-8215-ba6f24ce8bea"
        string_val: "f6bc7670-f856-41fd-842a-534190a5f437"
        string_val: "793a6dd6-fa34-4480-a036-0f1626ffc3bd"
        string_val: "6500b374-738a-4067-8c92-082509d6407e"
        string_val: "71a7b189-5787-4ea0-aee0-072f10834b13"
        string_val: "277c92ba-2aa5-40e0-966f-a6ac37b823c6"
        string_val: "9b87fa71-698c-461c-a699-b608f4225c0a"
        string_val: "220f7763-cfda-4ab1-83bc-d42a67961659"
        string_val: "91818f66-d893-4c88-8ace-0d03999c56c6"
        string_val: "c19976d5-441c-4456-b8b8-adec1e0138cf"
        string_val: "b5975ce5-1407-43cc-ae28-7a673b371e75"
        string_val: "5fd64c3f-0bf9-41e9-a2cd-13bf815e19a5"
        string_val: "e1178273-8fe7-42e4-bca6-8fbd0ad316c1"
        string_val: "fcbaad40-5f6e-4427-a3e6-101090115c9d"
        string_val: "5b3a04b7-a84e-4d39-98c9-b351a3054ae6"
        string_val: "f0e37235-7de6-4307-b01e-1e9c9476640b"
      }
    }
  }
}
node {
  name: "tensors/component_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "003d0db0-6dd4-4564-ba8d-1f9e57ed22b0"
        string_val: "5caa86fe-595e-426b-9e42-79f22b96fdd2"
        string_val: "2a64b937-4d51-4ce7-9447-5efcf235e044"
        string_val: "bacbee7f-cfd5-4c59-b35f-bea0a1477525"
        string_val: "6f2fbe3e-bbb5-4076-9274-871ea6bc110e"
        string_val: "7fb70c47-099c-450e-b1f2-822305bf7bfd"
        string_val: "12455388-39e0-4609-90b4-1c33286e93d3"
        string_val: "9e898943-7db3-4616-843a-146bf39a645d"
        string_val: "22b2f140-628a-4147-97aa-b7b2f34a29dd"
        string_val: "ae2f5594-cd5a-4a49-bd3b-98c7a4748309"
        string_val: "44f2b53a-a1ae-44c6-8810-950becedcf36"
        string_val: "c74e0493-d80d-4a1b-85bf-6b430bba5ef8"
        string_val: "fa67c16f-8ce2-4125-8427-7313fe3ca4f9"
        string_val: "77ffc21a-992d-4b8f-80f7-c7852b82a655"
        string_val: "2b7e570d-dc8d-46c6-910a-ef6f56813673"
        string_val: "3e342978-c360-4f82-b5b0-f363dd2698bc"
        string_val: "4e62f038-1833-479e-bab6-48423d7ad82f"
      }
    }
  }
}
node {
  name: "tensors/component_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "c8e4e54d-d043-44bc-8241-6bc05163152d"
        string_val: "f5b8ae32-2f2a-44a1-a168-5326be8b5894"
        string_val: "6154df38-6a23-45cb-9c81-f3d8a17c4182"
        string_val: "14d2946a-954c-4898-bfe3-6470d0c4e2d8"
        string_val: "f9fe71d1-e2ba-4336-b826-b85f2e2337aa"
        string_val: "a361bea6-c95e-40ed-b3ad-600c61b0bdbf"
        string_val: "821643b2-ecb2-45a8-a9db-6fbda133321e"
        string_val: "6dd67027-36d8-48a8-9ca6-dd63e42a532a"
        string_val: "3e45ff46-12ae-40c2-aa1a-a7d6dd1051f3"
        string_val: "36cbab66-b2ce-486d-91cd-8449274dc0a1"
        string_val: "f88c22a1-b13a-47b0-808d-89316268ca64"
        string_val: "57e58162-d993-47c4-beab-ea681f6f3acc"
        string_val: "c0154da2-dcd4-48dc-b3f1-aabc72ac4636"
        string_val: "e3bd99d2-6309-4892-9b21-a35ce17b4f88"
        string_val: "c329bbd6-5bed-49b4-864b-f1ec3e094740"
        string_val: "32897761-0396-4709-98d5-b89dbe32765d"
        string_val: "82a1ccdf-a6cb-44bf-bfa5-e3ba9799dd06"
      }
    }
  }
}
node {
  name: "tensors/component_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "c8cbbb3d-3f53-4570-964b-8beae8a45938"
        string_val: "8b9bfa2a-74cc-4e89-a409-99ff8e020ae6"
        string_val: "6804fd25-db08-4064-a03c-70c972e6f9a3"
        string_val: "16141f84-84cb-45a4-9c3a-c87c0075d6fa"
        string_val: "d29d5c4b-088c-44a6-93ad-193b55d68c07"
        string_val: "f2b882b5-4786-42b0-ac11-5bad764a0aaf"
        string_val: "5e9f43d7-e5f4-49a9-8b5c-7461c1c555d1"
        string_val: "e08c3797-ffe1-4c27-83f5-c817e39b0f11"
        string_val: "ac1ebb9a-2642-4396-9936-9c3bd3e1a265"
        string_val: "9de42835-c3da-44ae-950e-ba917b762628"
        string_val: "f5052071-efcc-45e6-86c4-8dcacfbf1acc"
        string_val: "64574a9c-9536-4c2f-b012-74e5f49aaafa"
        string_val: "e15a16f4-4eb3-447d-a937-e9e446a7d83c"
        string_val: "180b7f15-b808-4243-b9e5-0d7500ef9200"
        string_val: "7cf74025-2d92-4f24-94d6-bd062043141f"
        string_val: "7e7733f0-9afb-47a6-921b-3eabe1cbe5b4"
        string_val: "c3ab4bf1-0d6a-4cbb-9a6b-f9a251f8c281"
      }
    }
  }
}
node {
  name: "tensors/component_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "4d3798a8-a999-4974-a55f-19750b320711"
        string_val: "01161911-d9db-4e12-b715-a61ca3872d06"
        string_val: "0e2a0bd8-25a8-487d-b2bd-d78188c49dcd"
        string_val: "3bcdf485-3719-4fcb-8810-a37c1b62fabc"
        string_val: "bcfc2772-a530-4d6b-834a-e8ba0bc91cf5"
        string_val: "ad48ef6a-1ca3-4bcc-83c1-f6ec0beb77d2"
        string_val: "ac8194dd-ad32-40f8-9cde-80ab927911b5"
        string_val: "ce633f0a-9020-40f0-bb91-073e7cc130dd"
        string_val: "1540d538-2052-4164-9a4c-0552f378abbc"
        string_val: "6042d694-54a3-465a-b587-a9086e9a7f6f"
        string_val: "82331cce-e907-48be-8098-283bb387afa3"
        string_val: "29b118c1-7cb4-4b71-a54a-519409d5be84"
        string_val: "07931dfc-a6ce-453e-be78-531bf5523d24"
        string_val: "7aa0038c-1c77-4bf3-a9f0-c2f3bf9d99a6"
        string_val: "ce4571e6-37f3-4908-a436-767e5fcee33e"
        string_val: "447b3a7b-ffda-4a58-8a3b-0508d2327c52"
        string_val: "f3258bd8-0b34-4ad7-a92a-5c1deba18ded"
      }
    }
  }
}
node {
  name: "tensors/component_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "1d0a5c37-9cb4-43e8-89cc-29bb189a78b5"
        string_val: "bec905c3-cdd7-4379-9ba8-0827c69fee91"
        string_val: "c37fdaa9-d7e2-44d0-be06-864dd5e4a9ed"
        string_val: "dc379832-5f7f-4709-bf29-648cd568d2f5"
        string_val: "9bae1258-4d72-4109-b3a4-e893e5a3ab75"
        string_val: "e972917a-578d-49cf-8dda-7da233273dc8"
        string_val: "c3a0ae14-54fc-4bfa-9f8b-7b3ef2321f91"
        string_val: "6b8cde9a-e101-4c24-84b3-227e08c0eb48"
        string_val: "70a0378a-c0f0-4d1e-b943-d1013e5ecfd0"
        string_val: "5177b7e6-8da4-43d4-9176-29bc9ccfd011"
        string_val: "8c9ce892-b859-4f08-97af-978337a4c4e9"
        string_val: "446cecd1-d336-4987-8820-ee0d6b685480"
        string_val: "e4a3c652-cc01-423c-8705-505e737b97e6"
        string_val: "846d1946-365c-4bef-8126-40422b06e13a"
        string_val: "b335bd79-6be9-483c-a4aa-b7a2cf19ea89"
        string_val: "d5afe505-d956-45a4-8619-2e958608166f"
        string_val: "8637eec3-103b-4973-8cca-786fcd6f5d4a"
      }
    }
  }
}
node {
  name: "tensors/component_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "24c97dd2-a529-4815-849a-9f36c982cf67"
        string_val: "55223eba-6b06-48d2-b779-1e77c66f7ebe"
        string_val: "8535dc59-4a0b-45ec-af4d-c425597aaa3a"
        string_val: "08e2ad19-8e48-4442-9a02-1fdbc97c2ef4"
        string_val: "a127caaa-597c-4e36-a553-cacb72255bb6"
        string_val: "e89e4204-3037-41a2-a582-cf7ef6ef91c6"
        string_val: "25324224-ba14-441f-b756-05bcc521817c"
        string_val: "d82f4fb2-5334-4d57-984d-225c24eed90b"
        string_val: "3a277fcd-162a-48d2-854d-18352f86967a"
        string_val: "a61a368d-46ab-4f24-a0ab-65f712fa462c"
        string_val: "d90851b0-a1f8-4b6a-be3e-33d9d431fc1e"
        string_val: "39dd2327-fd1d-47d9-a0ba-f679a68bc824"
        string_val: "637a1383-55c0-4677-b87d-7eadd5634279"
        string_val: "453890ae-3f89-41ea-8e7b-3e9f7d12c0a5"
        string_val: "2e735786-e0e3-4d56-9ed1-e91bdd491d48"
        string_val: "7a1c9913-9d86-4e35-99f3-cee6afa85551"
        string_val: "a695fbc3-708c-4a9a-a179-e702ef9e7219"
      }
    }
  }
}
node {
  name: "tensors/component_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "39707e6d-8500-40ec-9987-d5a35498c515"
        string_val: "c5bbbd68-0041-47a7-a91c-c6077950ba33"
        string_val: "d57ef272-8e17-4226-a577-6dd21fc3382f"
        string_val: "030cd1f9-7279-4a15-91f5-a613034c626b"
        string_val: "d7cf26c8-c193-48d4-a34a-3e2e2e57a611"
        string_val: "aa069bfd-e429-4aa0-b8e5-f019c3d057be"
        string_val: "0aaaefa5-234d-46c4-a261-bf7e7b695478"
        string_val: "7fd9e1d5-6d69-476a-b4d5-c383501a44a4"
        string_val: "a74550be-276e-4823-9a47-87d8c39feee7"
        string_val: "4aec8b5b-12c5-4e28-9563-a82bcaf8174f"
        string_val: "f0ed731d-d7aa-488b-8aaa-c5843a639f72"
        string_val: "b8984d30-ad66-4284-88f7-1528b8acae66"
        string_val: "2b26cbd5-c507-4265-a4da-92283f434c64"
        string_val: "e0c3c83d-f1aa-4239-a934-7c0a50cbd2b7"
        string_val: "2c167a85-4e70-4697-94ec-d77ee9ef7685"
        string_val: "ecde0562-3ef9-4287-8f72-790431109027"
        string_val: "8315723e-001f-4638-a727-c2ad8077db18"
      }
    }
  }
}
node {
  name: "tensors/component_8"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "dc8d92c2-2974-433f-9bdc-1744232bf17a"
        string_val: "75311d58-89b9-43bf-a3e5-6e7d7a7b1b26"
        string_val: "9ca8c20f-f8f9-4b89-86f8-353c912f48ef"
        string_val: "361d31b6-62e9-461f-af11-965e836bf0ab"
        string_val: "eab4adb9-1ede-4fd1-bf92-4cb46b63e03c"
        string_val: "410d5739-aae3-4fd0-9762-75e4a9b12dc7"
        string_val: "0dd0405c-c7a5-44c3-9715-1fff3fd56b62"
        string_val: "be1c548e-1846-44ff-91b6-3c4f2162c986"
        string_val: "7a5385e3-fefd-46dc-8381-02354e93ca11"
        string_val: "ee5bb5b5-5978-4ce4-b333-7f1dbfb54b9e"
        string_val: "f4678935-ff94-4360-8c9e-9e9fc2ee9cc4"
        string_val: "f13dafdd-7795-4957-bea1-97c7c308b0d3"
        string_val: "06412d61-f6a4-4a20-827a-583be7793f38"
        string_val: "83693986-eb57-4622-99b7-8cb0143647cc"
        string_val: "8457b082-0bed-461f-bd24-15ed8c37f469"
        string_val: "bd44d944-c7eb-4dfd-a36f-e960224e7e2f"
        string_val: "5bba5aab-7832-47db-a1a4-d5d8267ea59e"
      }
    }
  }
}
node {
  name: "tensors/component_9"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "7b221cb3-4d74-41e9-84b4-0498dcef312f"
        string_val: "731a5739-b258-4b67-91f7-3e73873988a1"
        string_val: "3bc0e5ef-8278-4f23-9834-12d9fc7ac78b"
        string_val: "b65e9932-ba44-4468-a024-fc7a8d0f8ba4"
        string_val: "e9f49a98-3c6a-4ea1-942e-4e3eaf8fc5ea"
        string_val: "dfd3ed98-80f7-4adc-b6fb-e3e69dfd16e4"
        string_val: "423cca25-811f-4fd4-a743-bfe8031c8588"
        string_val: "abfb6346-a116-4049-b7b0-9a76ff0d7fb3"
        string_val: "98b08f47-787a-4f9c-814a-165f30ff176f"
        string_val: "aef6b558-a4c7-400b-82f8-64f8ff406cf3"
        string_val: "68ded375-5bc3-425d-a523-dee76ac78a90"
        string_val: "c5ebc8d8-3f25-45e4-ad20-f8af31ae8677"
        string_val: "1d65128b-e22b-4e47-9cfb-a10bc1a47e7f"
        string_val: "2b2bac9d-5171-4152-bec9-f6f8a257777b"
        string_val: "7aac5c60-7550-4d25-9bd3-05233e9e7745"
        string_val: "3611c147-b431-4ec0-92e4-c0be873928a3"
        string_val: "abdd9f6c-d140-41be-ae3f-9f767bb3c559"
      }
    }
  }
}
node {
  name: "tensors/component_10"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "76310b9b-03b4-4e68-9d1d-4004a4d91747"
        string_val: "e94df887-d040-4494-b01f-51262d02bcea"
        string_val: "bdd9d9eb-2730-4c7f-bf28-7570d6eac594"
        string_val: "9ced44f2-d134-4280-9cef-78c94f7d5f37"
        string_val: "4390c4d2-3d5a-463d-8aa8-e1c0d2c4018d"
        string_val: "f4572b3a-6b5d-4899-ad9d-5e68c8e25dcc"
        string_val: "6b3a8d3d-ad86-4cfc-a93b-36d0222971b5"
        string_val: "9e6d6d19-dd9c-487b-a71a-9a22add17dd3"
        string_val: "88836a1d-33e8-43c4-9d4c-983c22ba73af"
        string_val: "cfad6ef5-d58b-4658-9b17-3d49108b0a58"
        string_val: "e37f51ea-64ce-4b5c-a082-65d850e008ab"
        string_val: "a78595d3-c42d-4e90-8542-702f713fc149"
        string_val: "096b0d03-c7f3-402e-9c96-25092a61d00c"
        string_val: "34140252-daf9-450c-baaf-8b0d91e7b9f8"
        string_val: "275c1387-6b65-4399-bd45-c8c6f3df0de9"
        string_val: "a8a37e92-0b76-4ce4-9399-4097484fce13"
        string_val: "e260b9ce-64a6-4587-844b-7fb602ab53a2"
      }
    }
  }
}
node {
  name: "tensors/component_11"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "b9233100-fd37-487e-8029-b01f232cb72d"
        string_val: "22322da8-ee15-4e00-9cf3-3681f49a6424"
        string_val: "ed6d77ef-0812-49d0-bc4c-0e6e327f042b"
        string_val: "5c5a62bf-2bea-4c77-a7bc-715b24ed6a19"
        string_val: "f0c92d4a-8e33-423e-972a-38ee858e3ba7"
        string_val: "f01d398d-3c57-4848-ac35-6baeb88311ce"
        string_val: "4161a021-5a9a-4db9-a6e3-67376df3faa3"
        string_val: "b83ed7bd-b898-41a9-ac9a-820040698a43"
        string_val: "9cfa2e92-027f-4120-ab2c-667bf2cec0dc"
        string_val: "0333b202-29f8-4472-8e47-341b3ab3af70"
        string_val: "9a03b791-b2d5-4089-91fe-4b69c5203eec"
        string_val: "1c90acfd-638e-4bd4-a49d-8f2eb6dd1d5d"
        string_val: "6d578b19-84a0-454d-8166-16e27a1304cb"
        string_val: "ab1cc45a-5691-4321-b65b-d72c8f961df0"
        string_val: "d8a5d980-686f-4143-b2de-d21b30bddba5"
        string_val: "43e1b5cb-e921-4c35-944c-6467e5199a63"
        string_val: "b8eda2c3-279a-420e-b0a3-409c517ea9fd"
      }
    }
  }
}
node {
  name: "tensors/component_12"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "3764e357-8f99-483e-ba25-b56d74457f27"
        string_val: "e1339538-286d-4620-8a53-9e63209336fe"
        string_val: "7fadbccf-8eba-482d-a2c5-410cfcf1ae3c"
        string_val: "082246ee-a7d4-42f0-a169-1bef188356c8"
        string_val: "8aac250b-981e-454f-8d81-a33708310518"
        string_val: "c300efc4-6c3a-4e27-a41f-a0ff53b27491"
        string_val: "90338695-9b4b-4756-9de8-c15a485ae6ab"
        string_val: "03f144bc-1968-43f8-9e29-b66c99ae2fb5"
        string_val: "2a200034-5140-4e42-8768-a0a9d38ed9c9"
        string_val: "561b56d6-95a6-422b-afb1-ac18bfbdbb9c"
        string_val: "81622fa3-5da1-40e6-8b75-be669697e6db"
        string_val: "b6c82e4f-9c1b-482a-bd48-37658e10505e"
        string_val: "b2bd8f63-429c-431a-863e-bd7d1905292a"
        string_val: "c2f11711-273c-40c4-8dcb-b1812f9163b4"
        string_val: "5096e995-e9be-4673-a8f0-74be57d8595b"
        string_val: "c73a0e2c-cc59-49ef-b796-7584b88c4ed5"
        string_val: "1aa474d7-db8e-40e0-ba0f-ec8e4728391d"
      }
    }
  }
}
node {
  name: "tensors/component_13"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "85d2beda-79d6-450d-ab88-9f789bc83a39"
        string_val: "514a9db9-fdca-4341-8a2b-80c1b3a4fd13"
        string_val: "73fd9040-45f9-4535-81e0-b49ff9d3e645"
        string_val: "7fa942d4-5c25-4e73-9c1a-65c010e7544a"
        string_val: "301bd41a-799b-4f62-968d-e42123c27fa4"
        string_val: "38f09764-059a-4100-807d-495eb2f5dac5"
        string_val: "93df9c0f-1f93-468b-9a27-500916ea658e"
        string_val: "81285812-4915-4cee-9348-d942767b0cbc"
        string_val: "fde1c982-52f5-46ae-a844-14a198411d2d"
        string_val: "2fb648e0-033b-47bc-9833-4b2e569a6e13"
        string_val: "adf8c93e-8b20-4fcd-88cc-99962b9e19e9"
        string_val: "792de2d0-b0e5-4c5f-ac03-ce1bf599d2f1"
        string_val: "00a85bac-63d5-4f81-a08b-cb8e0154988d"
        string_val: "c9ae0bfa-9c4b-47cc-b25e-c51b7976120c"
        string_val: "657fb34e-23e3-4b7f-aa46-a00bb2e48c7b"
        string_val: "9023577d-2c03-4106-9f82-baeb7071a041"
        string_val: "31257d88-4393-453d-a55a-7ab79908b38f"
      }
    }
  }
}
node {
  name: "tensors/component_14"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "55ab940a-6585-45f6-b753-34ae9046aa71"
        string_val: "9919c812-6ede-47c6-9da9-cc4a2bd73301"
        string_val: "22c63e46-1943-45a7-90ef-f140978d07bb"
        string_val: "8d81c39d-f811-495c-bead-d6f4ce842c11"
        string_val: "21dddf5c-b8af-4747-87cf-c27c22fe78d5"
        string_val: "aa674e7e-a094-4769-8d2c-f186fa6f116f"
        string_val: "cb691f15-770c-497d-883c-31a403fb3421"
        string_val: "6e66eae9-d3cc-4608-8ec9-2cd5407deadd"
        string_val: "3483a97b-9f53-4921-b089-2dc37c4cfca8"
        string_val: "e9320e7b-65be-4510-9c50-e84acd655c3f"
        string_val: "0435453d-7600-4a44-9f61-b265206cc510"
        string_val: "c1f97ade-b1e4-4627-8e68-e7585ee44521"
        string_val: "0c6b1f7b-bf5e-4e18-b236-6bf6b7d5bff2"
        string_val: "6228a957-e231-4d13-bf90-7e1455c1fbfe"
        string_val: "5734fde1-412b-4670-aceb-8c516f605063"
        string_val: "4e40c979-ea1d-4a63-8a75-580f068833b0"
        string_val: "aa13d062-31bb-4870-98af-b86962f6608d"
      }
    }
  }
}
node {
  name: "tensors/component_15"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 17
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "tensors/component_16"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "8880fb92-e8b3-45a3-8c97-23f13a69f477"
        string_val: "4d93eb02-2854-4006-bdd0-0f47b0eb03cb"
        string_val: "54785d57-0921-4b5b-95a0-21ab24fa6810"
        string_val: "e8c2c718-5f82-4422-875d-305b97e8f6c3"
        string_val: "e4712ac7-c565-4d6a-9c0f-54169e2fee39"
        string_val: "74ad56bb-36d3-4239-89a0-1186b7487049"
        string_val: "daac4a9a-0a71-40f9-a353-0c8067f650ed"
        string_val: "6ef3c53b-6661-4ab6-a8fe-4a4dbe07ee6a"
        string_val: "2020fd3f-dd73-424a-9203-625a660adb0d"
        string_val: "daf68eba-bb4d-4e21-a28b-d6709f535727"
        string_val: "4d57e839-28ce-4ce2-a8dd-59f62c702fef"
        string_val: "b1c5c762-df90-4135-899b-e61d41f6173b"
        string_val: "4ea58e75-56e5-4520-98e8-ccbf655be399"
        string_val: "b72827ff-46d0-47a7-8fec-e67407609491"
        string_val: "289584c8-bf55-4de4-8516-1671344642d0"
        string_val: "ba7f47d5-b110-4752-8f7b-534e866856a3"
        string_val: "4e8e10f7-b93d-42bb-949e-603edb1acba4"
      }
    }
  }
}
node {
  name: "tensors/component_17"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "b43db953-6383-4494-85c4-9e9f206d3cc1"
        string_val: "538e8315-ffeb-4dc5-852a-c4b884861cd9"
        string_val: "59b41e0a-b0c6-4725-b6b7-03e14ba25f27"
        string_val: "21612091-8e4a-4b42-b01d-d885f9eed57b"
        string_val: "60d24d5c-bca5-4aeb-9753-7f9efc440d6b"
        string_val: "d3cc94d0-a395-413c-94de-c07ab7040cba"
        string_val: "8f04470a-67ff-470e-a3b5-cd2bf203857a"
        string_val: "0c7976c4-345b-47ac-b240-83e428dcb4bc"
        string_val: "c4a2c1a4-3158-4b95-9dc9-e8bda50e0a82"
        string_val: "abe7258c-5365-453d-9522-abee0422c466"
        string_val: "11e50814-2d86-4322-b693-7a20c61f9d76"
        string_val: "4b1813b0-470f-4344-9ec6-5da8ea7a7aef"
        string_val: "b9e427c8-62d0-4144-9cab-6317a9975506"
        string_val: "4f307e48-d737-472b-88f6-98836d25edbe"
        string_val: "88b1ce90-3fe8-4dc4-897e-e6d3ecf5746f"
        string_val: "6a33675a-b454-4fa8-8ec9-f0c0e6e9d331"
        string_val: "33887cba-8534-4099-be35-e2d6beab3514"
      }
    }
  }
}
node {
  name: "tensors/component_18"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "3e720713-553e-47de-b4cd-1fbf8cb752ad"
        string_val: "9d5f5cfd-1eb4-4979-9c84-dbbfa7b5dd2d"
        string_val: "c1d1ce73-154e-46b5-ac2a-0e218aabc853"
        string_val: "9c03f65e-0818-4679-9f68-c3e74d6770d2"
        string_val: "f87c9f23-6c2f-4228-8e49-ed2f4a9eede7"
        string_val: "45365d4b-6514-4957-9773-67a0c162bfcf"
        string_val: "2be170ea-4f74-4657-8ae6-c306c2b67775"
        string_val: "0fafd757-24fb-4cd8-86f4-32651852ade3"
        string_val: "7adcc06a-b598-4998-bc90-c26287df9c79"
        string_val: "64aa6e15-18a0-4a8d-9f89-5afd17a8aed8"
        string_val: "7caf12f0-cfbd-4405-b90a-627bf9da3c24"
        string_val: "66451d11-3190-4cc9-8d7b-a1296e79ceb6"
        string_val: "a56f11de-b09e-42ec-92f6-49c58b1c2946"
        string_val: "e4a87027-93cf-4857-9e95-ee4a75533fb4"
        string_val: "22d5eb99-9509-4850-a6cb-b8ace17b9085"
        string_val: "0f2f7b32-8110-4940-be1e-03067b217baa"
        string_val: "ea767a56-4efc-4690-ae77-eacd6844a69c"
      }
    }
  }
}
node {
  name: "tensors/component_19"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "1f6391b9-c67f-44ff-ac90-26cef20dfb48"
        string_val: "7e3bc3e7-e4de-49d4-8442-fa19f82c74e1"
        string_val: "52610ff9-b85b-4c34-950f-ef6c164db076"
        string_val: "a6430e31-bd7b-4162-8ffd-68ec97971935"
        string_val: "efb8f5d4-0245-4c52-82ad-197b792ebc4e"
        string_val: "5e562447-b9e6-453b-a3fe-79bfc02eedf2"
        string_val: "b1a91a84-019d-4773-bfd1-f4d8dacd153c"
        string_val: "3a119eea-4f42-44f8-af42-4c0256a7b3ad"
        string_val: "f11f33e4-23ac-4601-a388-c99c3cafae54"
        string_val: "ac83630b-f3ae-445b-8fb6-c939c4fe963d"
        string_val: "eabcb569-9b5d-4912-8a5b-098d32ded52d"
        string_val: "c09db940-a771-47f3-a2ff-b906330b626e"
        string_val: "b303e449-2e45-4d12-a613-f1340e62b237"
        string_val: "becf425c-d066-4969-ac17-0e7e8bf3c5a0"
        string_val: "1d8345d7-79c0-4790-9707-6d83dde5c373"
        string_val: "96013d48-e906-49d3-a778-fd4dbf7abaf5"
        string_val: "f6977c7b-b137-404a-a4c0-94afdacdd39a"
      }
    }
  }
}
node {
  name: "tensors/component_20"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "de263354-4191-4075-bc42-052bf3b26b0d"
        string_val: "148741a0-6b88-4bdb-a586-000e3e1eaeea"
        string_val: "bb76f717-1039-4249-ad84-e7004788cbba"
        string_val: "6ab5b2b7-029a-49e8-9810-b38ad277597d"
        string_val: "ff76a2dd-2a93-4664-9d05-f3c46d810957"
        string_val: "7f70c432-f961-4f45-9414-00f79022be47"
        string_val: "267f5a0f-c5d2-42e8-9e02-afd0596ace99"
        string_val: "2f41a7d7-9756-4dd5-a599-bf80463859bf"
        string_val: "b186d50f-c3a8-4583-9688-7ade4fd2b5a8"
        string_val: "1f03f772-41bb-4e22-ad0b-404ae0cee10c"
        string_val: "a39cd422-44e4-4936-a6e4-ad9081133771"
        string_val: "42c08941-06d8-4b0f-b465-070202d975d0"
        string_val: "bf27433a-7b93-41f0-a63e-fb404d70d261"
        string_val: "c2d18e74-8c7e-4301-987e-339e95bec6f9"
        string_val: "42d8c74a-9919-45b3-bc16-0cc58a53f564"
        string_val: "98ca180f-2f2a-4679-af41-b7dc1a51e033"
        string_val: "1797cbf4-395f-485b-af2c-5a61bea02e41"
      }
    }
  }
}
node {
  name: "tensors/component_21"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "1777332c-7fc8-4379-9b45-3e5329033e80"
        string_val: "d1ed7707-0c2f-4424-bbae-8dbfaf8ecce8"
        string_val: "608f2f65-193a-423a-9de6-d43383b4d516"
        string_val: "01e41e37-e4ee-4cc7-bf30-c0f805e7d9a4"
        string_val: "287fae8b-5d0e-4586-bee6-c81f5ac2eda3"
        string_val: "fe11281e-0b64-40c5-aa84-97282b1c48ca"
        string_val: "7764f0bc-e4be-4f24-9fba-2c1c84e3ac3d"
        string_val: "785199e8-8313-489e-8bb0-4ef61e2740f3"
        string_val: "e636d340-3be1-4875-8d6d-8335d8180d0b"
        string_val: "7524ba9e-5482-4bcd-98bc-6f7ff5f47f3c"
        string_val: "68a6e5d5-d184-4c97-a036-a50c8ccad8ca"
        string_val: "ef9b4cf3-4c13-4bf4-90dd-165cf7ff047d"
        string_val: "89160831-123f-4992-ad67-37c07c64770e"
        string_val: "1699cb41-1f58-4911-a6a9-65f64b2c96bb"
        string_val: "d2436a4c-13ce-4687-8b4a-baffd7af5038"
        string_val: "e564a3dc-7f16-4cb7-ac12-cd272eaab227"
        string_val: "0c1c083f-c481-4abe-a12f-5220606e154f"
      }
    }
  }
}
node {
  name: "tensors/component_22"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "d5c4ddd2-4c5c-4b8d-9a39-99be9585fe89"
        string_val: "3a910d14-4a3c-4d94-8430-27bdd67a1c55"
        string_val: "036ebc56-e600-4560-a843-4a852f70d46f"
        string_val: "d0c34aeb-8339-4d65-8c68-4ec13d8bacdc"
        string_val: "9e547c41-50fb-4e10-b1c6-2155f8ef3b9a"
        string_val: "b0c2f39b-2be5-4fb5-8c4f-97b81e0480ee"
        string_val: "9dc39245-fbeb-4657-bd18-4fb07c906427"
        string_val: "1be5e440-02df-47de-abd4-4b6ba936e37f"
        string_val: "f2777ad0-42e0-43d8-af5c-8529334b9201"
        string_val: "d3ddb6e7-1af2-41cb-be49-db596adbf3b3"
        string_val: "7ebe7d01-6d77-433b-8c77-6e1f0c7ec819"
        string_val: "16d9facb-7dfd-45af-b3de-cb851ccf1c7a"
        string_val: "e7bfbbf3-0a26-4a8f-8912-ea1cfaa55a52"
        string_val: "7d461462-2eb1-4261-b04a-63a807c8c2c1"
        string_val: "1f92d16e-81f8-430a-850f-a3395d4b655a"
        string_val: "2e0ebb8b-7f60-4752-a990-5db0c7973afe"
        string_val: "c966208f-0be0-4ddd-a385-cb3810c7efb8"
      }
    }
  }
}
node {
  name: "tensors/component_23"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "23c8ceb4-b7f3-4ae4-b471-a57d2d36c2de"
        string_val: "813f0bb4-262a-4f1d-84d8-27e13114a920"
        string_val: "0bb0da6c-6c00-47c1-b3f8-7a69fd85c13b"
        string_val: "f3476b7b-5f16-427b-a88e-3509f7debcb6"
        string_val: "5a7d9975-b7cd-4713-ba14-65769de8de0a"
        string_val: "c97b88df-3b13-4c7c-958f-d51c4b3a06b1"
        string_val: "e3d44d0b-dbff-4251-af2f-3074771c4f80"
        string_val: "d2cabdb6-e211-44fc-8ef6-7d934032af05"
        string_val: "1cdc0cb9-0772-41c0-afa8-0db577d9401b"
        string_val: "ef4142c4-441b-409f-9e80-1d15d6fb8e43"
        string_val: "282cf481-e346-4293-aa5e-671f00334fd1"
        string_val: "34700fcd-40d2-4281-a7ea-32ed517c154e"
        string_val: "16981920-0b67-4063-8b54-3390dc8076c3"
        string_val: "e12e3bea-4659-4b8e-a14e-ca6585234d94"
        string_val: "ef263c85-ac33-4d3b-a103-b6d366aab624"
        string_val: "da2fe877-7810-4821-af3d-6898aa19b94f"
        string_val: "7fea6522-c38e-46cb-8b4e-0933ce7bd0b6"
      }
    }
  }
}
node {
  name: "tensors/component_24"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "7d243588-7e24-421b-a3dd-a3b72af3aa65"
        string_val: "3abfc8d5-714a-429d-b0f7-bdd513d8fd39"
        string_val: "e445c1c3-1155-4461-b683-e71d14951ac6"
        string_val: "85d94529-ffa1-4666-8db3-b89f2c59017d"
        string_val: "7676cd49-05a5-4556-b887-ca006852ecf4"
        string_val: "5f276a8b-cd2d-48c3-88a9-e5271cc8f67c"
        string_val: "765fc8ce-3105-457e-9cf0-b827725870a7"
        string_val: "a146b5a8-f558-4314-8937-0fdef1cba2e3"
        string_val: "26ae5182-c92c-48ef-a681-75fd10e87cd0"
        string_val: "ec2a77bd-475b-4120-a267-7362617fe2d3"
        string_val: "e8e9ef60-e773-4dfa-b31a-f6efe68bc75e"
        string_val: "d41669b3-8b51-4932-a1b4-2482a0439b82"
        string_val: "f50492f4-feea-4cd0-b415-87c943814e37"
        string_val: "71bcea54-81dd-4c3e-a820-7030abae2157"
        string_val: "facc31be-7c56-4692-9cd3-cf17fe5278d3"
        string_val: "fbc791cb-44a3-4910-b28f-bc040dfff66e"
        string_val: "3ba02874-e3da-4342-8ce6-e79f7577d14f"
      }
    }
  }
}
node {
  name: "tensors/component_25"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "10c7c3c4-71b2-4320-8051-d864a6a1e898"
        string_val: "d738ad23-80ca-4b74-a253-b1ff19df582f"
        string_val: "0fb31425-c5ff-4ee4-af14-9e6bbd60cf28"
        string_val: "2e103181-d144-40e9-b692-7e785f1f63be"
        string_val: "eb956c77-e169-4e4c-8e7c-c9a494819402"
        string_val: "555303cc-cb6b-43d5-b6a7-49ae13cf42b1"
        string_val: "9a7e5ca8-2a66-4746-ab35-253bde6d2cb4"
        string_val: "ab8d57f3-1883-4273-89af-87f10e494bc5"
        string_val: "b654904f-054e-49dd-be00-86b31bfdea7c"
        string_val: "436a74a5-1a7c-4ac2-b9a2-8f2266db5705"
        string_val: "79126ce4-93ba-4601-a69d-7ef5775c1f77"
        string_val: "e85a2e68-7774-4c8d-be34-ce04ab620316"
        string_val: "58edd221-1658-4b38-8fef-5f118412538c"
        string_val: "bddfa865-3981-48c4-9d2f-9b0d37035e29"
        string_val: "2f267259-414b-4a67-9d9d-779c3052f6b2"
        string_val: "8a285f5a-4544-4a8a-98e8-3675111443e9"
        string_val: "6ae2d575-e698-4905-a61d-43a0aea78ecd"
      }
    }
  }
}
node {
  name: "tensors/component_26"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "94b516af-609f-4997-b657-c998848684eb"
        string_val: "900bb077-eb3c-4a3f-a086-27b939b57a1d"
        string_val: "192813c5-29bf-419e-a30a-02ed39bd7e46"
        string_val: "e9bc56d4-f324-410a-a31e-0f05db9f1396"
        string_val: "cdf66bb1-089e-45a6-a548-dacb0919f71e"
        string_val: "81091eb8-9f60-47e3-984d-55dff0c1351d"
        string_val: "80e2cd91-1ebd-4f7a-abeb-579b81e6f4b6"
        string_val: "dcd20413-6994-48d5-8062-229d189e3474"
        string_val: "89f844fa-6ba9-40ab-aa22-b7e1a9ba6dd3"
        string_val: "40df9269-2c82-4bf9-ba9c-1964177aed0f"
        string_val: "8707d52b-f5b0-4c0b-a950-8f72af36a6d5"
        string_val: "6ccd1677-5600-4f93-aad6-ea76e6f1a82e"
        string_val: "8ab0a761-5bc9-46f3-9a9e-e6d030ddb92f"
        string_val: "893e70f0-09ab-4dc6-9c0b-042e112a9747"
        string_val: "e3ea2450-0abe-4d8e-bc72-6d17ac070169"
        string_val: "0154d9d6-5a87-4fde-8372-023ece84da38"
        string_val: "94dfb75f-88dd-4710-a0a0-3a1bdec13b72"
      }
    }
  }
}
node {
  name: "tensors/component_27"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "405a92fe-bfa9-43d4-8a95-fbbad5d7b728"
        string_val: "4824a318-c627-49c9-aa0b-5f5519aa9e90"
        string_val: "93d5e132-f810-4692-ac91-56cf94bda123"
        string_val: "07cb1a7f-02d5-4a62-8f88-d82b705773ad"
        string_val: "a339e0b6-0ea5-47f4-8080-e93eb6400a8e"
        string_val: "829ca14a-5ef5-40c0-8da7-2cf9f92823a5"
        string_val: "26c60ae6-89f1-4277-8e5e-dc7f4ddab68a"
        string_val: "e3e928a9-8e59-40d1-b469-d8284e42fe88"
        string_val: "def69cc1-7c92-4f70-aa45-5928500cb40e"
        string_val: "a0b9bc11-78e1-42f6-9cbf-5b9fe2e1e514"
        string_val: "93b7771e-e106-4a1b-84f3-a66b1d57fa02"
        string_val: "e4bfdbfc-3c50-4152-b259-677817a41d05"
        string_val: "0aea734f-dc0b-40fa-9889-650690fb5e16"
        string_val: "18c6e746-706d-40fc-a860-6b8d6483d34f"
        string_val: "1543bd94-b282-4a24-8c68-3109f600f884"
        string_val: "07bc2cc5-3161-4b81-b02e-d52a639daf9d"
        string_val: "69a64d11-7819-4036-a0e1-cd7dd3cc18fa"
      }
    }
  }
}
node {
  name: "tensors/component_28"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "3ee46c62-2384-4da8-812f-1183b894bfd8"
        string_val: "6a25bb36-a3d6-42bd-bcfa-8df1ffce8c33"
        string_val: "44f4f0d8-856e-4756-9694-bf04fc65f870"
        string_val: "6cf401be-6c18-495a-8d3b-0fb0502b377a"
        string_val: "8836f5fa-e21a-43ab-a033-6217c74f16fd"
        string_val: "a69e5ef2-ee4a-47a0-8f97-125d2442fd83"
        string_val: "b785edc9-72df-4efe-a00d-32396f253aa3"
        string_val: "7e7e68ca-9c5c-41c7-98f9-e1ceea90987d"
        string_val: "6dda68ed-cdc4-4705-89c5-386798a6c729"
        string_val: "cf7fcdb8-eb05-4d59-983c-6dc450737812"
        string_val: "9fa2ebc2-8be7-4675-8f89-472a87b112e5"
        string_val: "a07fd5ca-d7d2-41fd-90ed-a57e706b5005"
        string_val: "0cb79f57-3322-4c90-b91a-77175e1fe73e"
        string_val: "534b82f9-7dbf-4b23-9422-321419268a67"
        string_val: "bd3a988c-4e96-439a-bdb5-0b9d4505f79c"
        string_val: "c9f05c39-5d45-4710-8eea-075993f75f40"
        string_val: "8d2e8258-49d7-49ed-9065-a94d5c1cda09"
      }
    }
  }
}
node {
  name: "tensors/component_29"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "7f52919b-dd35-4780-89b8-7dfc41a77562"
        string_val: "f5f24e02-67d0-48b8-a8c2-d734908e590f"
        string_val: "6e2624fa-6425-4ff6-a54c-d1ed37f08d5d"
        string_val: "563e51eb-a9d6-4bfe-b873-fbb1ffab4f95"
        string_val: "c912f10b-89c6-4f2a-9a1c-344a055fb1dc"
        string_val: "43f3ad55-67c6-4b91-b29e-70ee3134f90a"
        string_val: "2b7f2a8d-1035-4420-a22c-2702a5e9a98f"
        string_val: "cf5616f2-0773-452c-adf5-fb492349273c"
        string_val: "662b5dfd-9a7c-4a73-994e-58027f5e3f1c"
        string_val: "9aad1b97-7528-4ac6-924d-3f6344d4e237"
        string_val: "b1a2765f-b607-4f7e-b32a-07dfafe85f83"
        string_val: "a1e72212-ec4d-4042-a079-b2e15e838fd5"
        string_val: "21b953de-6ae0-498b-a165-a7c9663b6f6c"
        string_val: "ea29a002-b37d-4c92-aee3-2bf1627fbe6f"
        string_val: "5013ed9a-81c9-4ba8-90dd-551fd52bd9a6"
        string_val: "432d6fe4-c9fc-41d3-b6da-c031913ec4b4"
        string_val: "f12c0381-d99d-4341-9194-659fc1a59a26"
      }
    }
  }
}
node {
  name: "tensors/component_30"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "0b399390-aace-45b9-9cea-fa457bcba718"
        string_val: "cf32c89c-8d6a-4386-b1bd-9ebd5df4fb96"
        string_val: "62a4ee0d-6267-4bdf-86f2-acf8c6852963"
        string_val: "73451293-3e8e-48a9-9357-93f580f78a38"
        string_val: "da986751-ce49-421f-906b-74139cfbb4e3"
        string_val: "26188e54-44f2-4328-84d1-86802f203cae"
        string_val: "067b4a99-490c-4da4-afb9-c825c0594ce1"
        string_val: "5eb1e8c5-68f8-44ec-8348-7e477811cbcf"
        string_val: "e073ca62-cbb2-4c79-b76d-d3baccff2be9"
        string_val: "4c528698-3c27-431e-8366-0bffa5329ec8"
        string_val: "aba2a1fd-ecd2-4658-b707-3861a6cc3a2a"
        string_val: "3040fae7-eaa4-4fc1-8622-48dcc2b69344"
        string_val: "adcdab32-53b9-44b3-9987-9c3b6ad18009"
        string_val: "bd6959c0-8bca-4f97-b4e6-f827293ae9bd"
        string_val: "a42fdc3d-da7d-46fa-9085-d5f314a14a6e"
        string_val: "2e360519-41b4-49d8-a2ac-f4b56721b572"
        string_val: "4f6efdba-caed-4b2f-b71a-41811b9e57c4"
      }
    }
  }
}
node {
  name: "tensors/component_31"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "0-2"
        string_val: "5-1"
        string_val: "1-5"
        string_val: "0-0"
        string_val: "4-2"
        string_val: "5-1"
        string_val: "2-1"
        string_val: "2-1"
        string_val: "8-1"
        string_val: "2-1"
        string_val: "3-0"
        string_val: "2-2"
        string_val: "1-0"
        string_val: "4-2"
        string_val: "1-0"
        string_val: "2-2"
        string_val: "3-1"
      }
    }
  }
}
node {
  name: "tensors/component_32"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 17
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\001\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 100
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 150
      }
    }
  }
}
node {
  name: "Iterator"
  op: "Iterator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "tensors/component_0"
  input: "tensors/component_1"
  input: "tensors/component_2"
  input: "tensors/component_3"
  input: "tensors/component_4"
  input: "tensors/component_5"
  input: "tensors/component_6"
  input: "tensors/component_7"
  input: "tensors/component_8"
  input: "tensors/component_9"
  input: "tensors/component_10"
  input: "tensors/component_11"
  input: "tensors/component_12"
  input: "tensors/component_13"
  input: "tensors/component_14"
  input: "tensors/component_15"
  input: "tensors/component_16"
  input: "tensors/component_17"
  input: "tensors/component_18"
  input: "tensors/component_19"
  input: "tensors/component_20"
  input: "tensors/component_21"
  input: "tensors/component_22"
  input: "tensors/component_23"
  input: "tensors/component_24"
  input: "tensors/component_25"
  input: "tensors/component_26"
  input: "tensors/component_27"
  input: "tensors/component_28"
  input: "tensors/component_29"
  input: "tensors/component_30"
  input: "tensors/component_31"
  input: "tensors/component_32"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "TensorSliceDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "ShuffleDataset"
  input: "count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
}
node {
  name: "BatchDataset"
  op: "BatchDataset"
  input: "RepeatDataset"
  input: "batch_size"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
}
node {
  name: "MakeIterator"
  op: "MakeIterator"
  input: "BatchDataset"
  input: "Iterator"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "Iterator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "Iterator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer1_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer1_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer1_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer1_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer1_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer1_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer1_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer1_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_1"
  op: "ExpandDims"
  input: "IteratorGetNext:4"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_1"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_1"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer2_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer2_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer2_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer2_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer2_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer2_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_1"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer2_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer2_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_2"
  op: "ExpandDims"
  input: "IteratorGetNext:5"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer3_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer3_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer3_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer3_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer3_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer3_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer3_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer3_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_3"
  op: "ExpandDims"
  input: "IteratorGetNext:6"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_3"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_3"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_3"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer4_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer4_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer4_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer4_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer4_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer4_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_3"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer4_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer4_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_4/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_4"
  op: "ExpandDims"
  input: "IteratorGetNext:7"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_4/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_4"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_4"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_4"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer5_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer5_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer5_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer5_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer5_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer5_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_4"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer5_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer5_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_5/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_5"
  op: "ExpandDims"
  input: "IteratorGetNext:8"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_5/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_5"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_5"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_5"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer6_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer6_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer6_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer6_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer6_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer6_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_5"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer6_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer6_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_6/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_6"
  op: "ExpandDims"
  input: "IteratorGetNext:9"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_6/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_6"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_6"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_6"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer7_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer7_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer7_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer7_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer7_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer7_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_6"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer7_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer7_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_7/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_7"
  op: "ExpandDims"
  input: "IteratorGetNext:10"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_7/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_7"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_7"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_7"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer8_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer8_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer8_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer8_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer8_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer8_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_7"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer8_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer8_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_8/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_8"
  op: "ExpandDims"
  input: "IteratorGetNext:11"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_8/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_8"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_8"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_8"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer9_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer9_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer9_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer9_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer9_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer9_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_8"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer9_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer9_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_9/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_9"
  op: "ExpandDims"
  input: "IteratorGetNext:2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_9/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_9"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_9"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_9"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer10_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer10_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer10_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer10_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer10_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer10_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_9"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer10_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer10_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_10/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_10"
  op: "ExpandDims"
  input: "IteratorGetNext:3"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_10/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_10"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_10"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_10"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer11_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer11_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer11_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer11_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer11_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer11_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_10"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer11_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer11_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_11/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_11"
  op: "ExpandDims"
  input: "IteratorGetNext:12"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_11/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_11"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_11"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_11"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub1_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub1_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub1_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub1_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub1_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub1_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_11"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub1_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub1_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_12/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_12"
  op: "ExpandDims"
  input: "IteratorGetNext:13"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_12/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_12"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_12"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_12"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub2_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub2_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub2_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub2_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub2_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub2_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_12"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub2_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub2_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_13/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_13"
  op: "ExpandDims"
  input: "IteratorGetNext:14"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_13/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_13"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_13"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/ExpandDims_13"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub3_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub3_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub3_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub3_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub3_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub3_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_13"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub3_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/values"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub3_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/SparseCross"
  op: "SparseCross"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/indices"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_1"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_3"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_4"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_5"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_6"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_7"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_8"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_9"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_10"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_11"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_12"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/hash_table_Lookup_13"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_1/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_2/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_3/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_4/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_5/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_6/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_7/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_8/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_9/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_10/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_11/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_12/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/to_sparse_input_13/dense_shape"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dense_types"
    value {
      list {
      }
    }
  }
  attr {
    key: "hash_key"
    value {
      i: 956888297470
    }
  }
  attr {
    key: "hashed_output"
    value {
      b: true
    }
  }
  attr {
    key: "internal_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 10000
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/SparseCross"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/SparseCross:2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/SparseCross:1"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 10000
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10000
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10000
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/away_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/team-vocab-2019-05-21.txt_50_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/away_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/away_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/team-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/away_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/away_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/away_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 50
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/away_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/away_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/away_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:17"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer1_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer1_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer1_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer1_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer1_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer1_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer1_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer1_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_1"
  op: "ExpandDims"
  input: "IteratorGetNext:20"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_1"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_1"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer2_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer2_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer2_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer2_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer2_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer2_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_1"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer2_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer2_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_2"
  op: "ExpandDims"
  input: "IteratorGetNext:21"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer3_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer3_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer3_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer3_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer3_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer3_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer3_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer3_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_3"
  op: "ExpandDims"
  input: "IteratorGetNext:22"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_3"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_3"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_3"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer4_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer4_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer4_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer4_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer4_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer4_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_3"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer4_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer4_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_4/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_4"
  op: "ExpandDims"
  input: "IteratorGetNext:23"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_4/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_4"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_4"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_4"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer5_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer5_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer5_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer5_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer5_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer5_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_4"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer5_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer5_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_5/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_5"
  op: "ExpandDims"
  input: "IteratorGetNext:24"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_5/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_5"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_5"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_5"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer6_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer6_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer6_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer6_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer6_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer6_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_5"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer6_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer6_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_6/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_6"
  op: "ExpandDims"
  input: "IteratorGetNext:25"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_6/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_6"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_6"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_6"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer7_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer7_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer7_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer7_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer7_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer7_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_6"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer7_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer7_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_7/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_7"
  op: "ExpandDims"
  input: "IteratorGetNext:26"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_7/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_7"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_7"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_7"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer8_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer8_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer8_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer8_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer8_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer8_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_7"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer8_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer8_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_8/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_8"
  op: "ExpandDims"
  input: "IteratorGetNext:27"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_8/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_8"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_8"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_8"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer9_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer9_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer9_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer9_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer9_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer9_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_8"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer9_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer9_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_9/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_9"
  op: "ExpandDims"
  input: "IteratorGetNext:18"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_9/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_9"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_9"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_9"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer10_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer10_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer10_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer10_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer10_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer10_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_9"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer10_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer10_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_10/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_10"
  op: "ExpandDims"
  input: "IteratorGetNext:19"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_10/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_10"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_10"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_10"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer11_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer11_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer11_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer11_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer11_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer11_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_10"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer11_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer11_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_11/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_11"
  op: "ExpandDims"
  input: "IteratorGetNext:28"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_11/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_11"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_11"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_11"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub1_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub1_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub1_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub1_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub1_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub1_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_11"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub1_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub1_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_12/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_12"
  op: "ExpandDims"
  input: "IteratorGetNext:29"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_12/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_12"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_12"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_12"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub2_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub2_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub2_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub2_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub2_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub2_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_12"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub2_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub2_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_13/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_13"
  op: "ExpandDims"
  input: "IteratorGetNext:30"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_13/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_13"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_13"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/ExpandDims_13"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub3_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt_4123_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub3_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub3_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/player-by-country-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub3_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub3_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub3_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 4123
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_13"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub3_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/values"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub3_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/SparseCross"
  op: "SparseCross"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/indices"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_1"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_3"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_4"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_5"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_6"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_7"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_8"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_9"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_10"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_11"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_12"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/hash_table_Lookup_13"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_1/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_2/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_3/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_4/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_5/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_6/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_7/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_8/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_9/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_10/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_11/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_12/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/to_sparse_input_13/dense_shape"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dense_types"
    value {
      list {
      }
    }
  }
  attr {
    key: "hash_key"
    value {
      i: 956888297470
    }
  }
  attr {
    key: "hashed_output"
    value {
      b: true
    }
  }
  attr {
    key: "internal_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 10000
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/SparseCross"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/SparseCross:2"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/SparseCross:1"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 10000
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10000
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10000
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:16"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/home_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_/home/ubuntu/res/vocab/FOOTBALL/german/team-vocab-2019-05-21.txt_50_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/home_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/home_lookup/hash_table/table_init/asset_filepath"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/ubuntu/res/vocab/FOOTBALL/german/team-vocab-2019-05-21.txt"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/home_lookup/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/home_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/home_lookup/hash_table/table_init/asset_filepath"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 50
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/home_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/home_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/home_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/away_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/home_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\204N\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.01727307215332985
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01727307215332985
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20100
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/bias/part_0"
  input: "dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_0/kernel/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_layer/concat"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_0/bias/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Mean"
  op: "Mean"
  input: "dnn/zero_fraction/Cast"
  input: "dnn/zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_0/activation/tag"
  input: "dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.4472135901451111
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4472135901451111
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/bias/part_0"
  input: "dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_1/kernel/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_1/bias/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/zero_fraction_1/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Mean"
  op: "Mean"
  input: "dnn/zero_fraction_1/Cast"
  input: "dnn/zero_fraction_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_1/activation/tag"
  input: "dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.4472135901451111
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4472135901451111
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_2/bias/part_0"
  input: "dnn/hiddenlayer_2/bias/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_2/kernel/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_2/bias/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_2/MatMul"
  input: "dnn/hiddenlayer_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/zero_fraction_2/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Mean"
  op: "Mean"
  input: "dnn/zero_fraction_2/Cast"
  input: "dnn/zero_fraction_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_2/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_2/activation/tag"
  input: "dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.6793662309646606
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6793662309646606
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/kernel/part_0"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/read"
  op: "Identity"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/bias/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/bias/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/bias/part_0"
  input: "dnn/logits/bias/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/bias/part_0/read"
  op: "Identity"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel"
  op: "Identity"
  input: "dnn/logits/kernel/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/bias"
  op: "Identity"
  input: "dnn/logits/bias/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/MatMul"
  input: "dnn/logits/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/zero_fraction_3/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Equal"
  op: "Equal"
  input: "dnn/logits/BiasAdd"
  input: "dnn/zero_fraction_3/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Mean"
  op: "Mean"
  input: "dnn/zero_fraction_3/Cast"
  input: "dnn/zero_fraction_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/logits/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/logits/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_3/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/logits/activation/tag"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/logits/Shape"
  op: "Shape"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "dnn/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "dnn/head/predictions/class_ids/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_ids"
  op: "ArgMax"
  input: "dnn/logits/BiasAdd"
  input: "dnn/head/predictions/class_ids/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/head/predictions/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/head/predictions/ExpandDims"
  op: "ExpandDims"
  input: "dnn/head/predictions/class_ids"
  input: "dnn/head/predictions/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/predictions/str_classes"
  op: "AsString"
  input: "dnn/head/predictions/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "fill"
    value {
      s: ""
    }
  }
  attr {
    key: "precision"
    value {
      i: -1
    }
  }
  attr {
    key: "scientific"
    value {
      b: false
    }
  }
  attr {
    key: "shortest"
    value {
      b: false
    }
  }
  attr {
    key: "width"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/head/predictions/probabilities"
  op: "Softmax"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:32"
  input: "dnn/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/labels/Shape"
  op: "Shape"
  input: "dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/labels/Shape_1"
  op: "Shape"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "dnn/head/labels/strided_slice/stack"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/labels/strided_slice"
  op: "StridedSlice"
  input: "dnn/head/labels/Shape_1"
  input: "dnn/head/labels/strided_slice/stack"
  input: "dnn/head/labels/strided_slice/stack_1"
  input: "dnn/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/head/labels/concat/values_1"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/labels/concat/axis"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/labels/concat"
  op: "ConcatV2"
  input: "dnn/head/labels/strided_slice"
  input: "dnn/head/labels/concat/values_1"
  input: "dnn/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "dnn/head/labels/concat"
  input: "dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Const"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/All"
  op: "All"
  input: "dnn/head/labels/assert_equal/Equal"
  input: "dnn/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "dnn/head/labels/assert_equal/All"
  input: "dnn/head/labels/assert_equal/Assert/Assert/data_0"
  input: "dnn/head/labels/concat"
  input: "dnn/head/labels/assert_equal/Assert/Assert/data_2"
  input: "dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "dnn/head/labels"
  op: "Identity"
  input: "dnn/head/labels/ExpandDims"
  input: "^dnn/head/labels/assert_equal/Assert/Assert"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "dnn/head/labels"
  input: "dnn/head/assert_range/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less_equal/All"
  op: "All"
  input: "dnn/head/assert_range/assert_less_equal/LessEqual"
  input: "dnn/head/assert_range/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (dnn/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (dnn/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "dnn/head/assert_range/assert_less_equal/All"
  input: "dnn/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  input: "dnn/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  input: "dnn/head/labels"
  input: "dnn/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  input: "dnn/head/assert_range/Const"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "dnn/head/assert_range/assert_non_negative/Const"
  input: "dnn/head/labels"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  input: "dnn/head/labels"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "dnn/head/assert_range/Identity"
  op: "Identity"
  input: "dnn/head/labels"
  input: "^dnn/head/assert_range/assert_less_equal/Assert/Assert"
  input: "^dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  op: "Squeeze"
  input: "dnn/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "dnn/logits/BiasAdd"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/Const"
  input: "^dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/head/ExpandDims"
  op: "ExpandDims"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  input: "dnn/head/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "dnn/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "dnn/head/weighted_loss/ToFloat_1/x"
  op: "Const"
  input: "^dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/Mul"
  op: "Mul"
  input: "dnn/head/ExpandDims"
  input: "dnn/head/weighted_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/Const"
  op: "Const"
  input: "^dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/Sum"
  op: "Sum"
  input: "dnn/head/weighted_loss/Mul"
  input: "dnn/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/gradients/Fill"
  op: "Fill"
  input: "dnn/head/gradients/Shape"
  input: "dnn/head/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "dnn/head/gradients/Fill"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "dnn/head/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Reshape"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "dnn/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Tile"
  input: "dnn/head/weighted_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Mul"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Sum"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/head/ExpandDims"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Mul_1"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Sum_1"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
  input: "^dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/ExpandDims_grad/Shape"
  op: "Shape"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "dnn/head/gradients/dnn/head/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "dnn/head/gradients/dnn/head/ExpandDims_grad/Reshape"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "dnn/head/gradients/dnn/head/ExpandDims_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/zeros_like"
  op: "ZerosLike"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
  input: "^dnn/head/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_layer/concat"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20100
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/kernel/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/kernel/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/logits/kernel/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/logits/kernel/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/bias/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/bias/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/logits/bias/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  input: "dnn/dnn/logits/bias/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/logits/bias/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/Adagrad/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dnn/head/Adagrad/update_dnn/hiddenlayer_0/kernel/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  input: "dnn/head/Adagrad/learning_rate"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/Adagrad/update_dnn/hiddenlayer_0/bias/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/bias/part_0"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  input: "dnn/head/Adagrad/learning_rate"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/Adagrad/update_dnn/hiddenlayer_1/kernel/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  input: "dnn/head/Adagrad/learning_rate"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/Adagrad/update_dnn/hiddenlayer_1/bias/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/bias/part_0"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  input: "dnn/head/Adagrad/learning_rate"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/Adagrad/update_dnn/hiddenlayer_2/kernel/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  input: "dnn/head/Adagrad/learning_rate"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/Adagrad/update_dnn/hiddenlayer_2/bias/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_2/bias/part_0"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  input: "dnn/head/Adagrad/learning_rate"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/Adagrad/update_dnn/logits/kernel/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/kernel/part_0"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  input: "dnn/head/Adagrad/learning_rate"
  input: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/Adagrad/update_dnn/logits/bias/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/bias/part_0"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  input: "dnn/head/Adagrad/learning_rate"
  input: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/Adagrad/update"
  op: "NoOp"
  input: "^dnn/head/Adagrad/update_dnn/hiddenlayer_0/bias/part_0/ApplyAdagrad"
  input: "^dnn/head/Adagrad/update_dnn/hiddenlayer_0/kernel/part_0/ApplyAdagrad"
  input: "^dnn/head/Adagrad/update_dnn/hiddenlayer_1/bias/part_0/ApplyAdagrad"
  input: "^dnn/head/Adagrad/update_dnn/hiddenlayer_1/kernel/part_0/ApplyAdagrad"
  input: "^dnn/head/Adagrad/update_dnn/hiddenlayer_2/bias/part_0/ApplyAdagrad"
  input: "^dnn/head/Adagrad/update_dnn/hiddenlayer_2/kernel/part_0/ApplyAdagrad"
  input: "^dnn/head/Adagrad/update_dnn/logits/bias/part_0/ApplyAdagrad"
  input: "^dnn/head/Adagrad/update_dnn/logits/kernel/part_0/ApplyAdagrad"
}
node {
  name: "dnn/head/Adagrad/value"
  op: "Const"
  input: "^dnn/head/Adagrad/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/Adagrad"
  op: "AssignAdd"
  input: "global_step"
  input: "dnn/head/Adagrad/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/ones_like/Shape"
  op: "Shape"
  input: "dnn/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/ones_like"
  op: "Fill"
  input: "dnn/head/ones_like/Shape"
  input: "dnn/head/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/mul"
  op: "Mul"
  input: "dnn/head/mul/x"
  input: "dnn/head/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/Sum"
  op: "Sum"
  input: "dnn/head/mul"
  input: "dnn/head/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/truediv"
  op: "RealDiv"
  input: "dnn/head/weighted_loss/Sum"
  input: "dnn/head/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "dnn/head/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "average_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "average_loss"
      }
    }
  }
}
node {
  name: "average_loss"
  op: "ScalarSummary"
  input: "average_loss/tags"
  input: "dnn/head/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/Assign"
  input: "^dnn/dnn/logits/bias/part_0/Adagrad/Assign"
  input: "^dnn/dnn/logits/kernel/part_0/Adagrad/Assign"
  input: "^dnn/hiddenlayer_0/bias/part_0/Assign"
  input: "^dnn/hiddenlayer_0/kernel/part_0/Assign"
  input: "^dnn/hiddenlayer_1/bias/part_0/Assign"
  input: "^dnn/hiddenlayer_1/kernel/part_0/Assign"
  input: "^dnn/hiddenlayer_2/bias/part_0/Assign"
  input: "^dnn/hiddenlayer_2/kernel/part_0/Assign"
  input: "^dnn/logits/bias/part_0/Assign"
  input: "^dnn/logits/kernel/part_0/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 17
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/kernel/part_0"
        string_val: "dnn/hiddenlayer_0/bias/part_0"
        string_val: "dnn/hiddenlayer_1/kernel/part_0"
        string_val: "dnn/hiddenlayer_1/bias/part_0"
        string_val: "dnn/hiddenlayer_2/kernel/part_0"
        string_val: "dnn/hiddenlayer_2/bias/part_0"
        string_val: "dnn/logits/kernel/part_0"
        string_val: "dnn/logits/bias/part_0"
        string_val: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
        string_val: "dnn/dnn/logits/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/logits/bias/part_0/Adagrad"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 17
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/kernel/part_0"
        string_val: "dnn/hiddenlayer_0/bias/part_0"
        string_val: "dnn/hiddenlayer_1/kernel/part_0"
        string_val: "dnn/hiddenlayer_1/bias/part_0"
        string_val: "dnn/hiddenlayer_2/kernel/part_0"
        string_val: "dnn/hiddenlayer_2/bias/part_0"
        string_val: "dnn/logits/kernel/part_0"
        string_val: "dnn/logits/bias/part_0"
        string_val: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
        string_val: "dnn/dnn/logits/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/logits/bias/part_0/Adagrad"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer10_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer11_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer1_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer2_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer3_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer4_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer5_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer6_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer7_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer8_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awayPlayer9_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub1_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub2_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/awayPlayer1_X_awayPlayer10_X_awayPlayer11_X_awayPlayer2_X_awayPlayer3_X_awayPlayer4_X_awayPlayer5_X_awayPlayer6_X_awayPlayer7_X_awayPlayer8_X_awayPlayer9_X_awaySub1_X_awaySub2_X_awaySub3_indicator/awaySub3_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/away_indicator/away_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer10_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer11_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer1_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer2_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer3_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer4_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer5_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer6_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer7_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer8_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homePlayer9_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub1_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub2_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/homePlayer1_X_homePlayer10_X_homePlayer11_X_homePlayer2_X_homePlayer3_X_homePlayer4_X_homePlayer5_X_homePlayer6_X_homePlayer7_X_homePlayer8_X_homePlayer9_X_homeSub1_X_homeSub2_X_homeSub3_indicator/homeSub3_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/home_indicator/home_lookup/hash_table/table_init"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_0/activation"
  input: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_1/activation"
  input: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_2/activation"
  input: "dnn/dnn/logits/fraction_of_zero_values"
  input: "dnn/dnn/logits/activation"
  input: "loss"
  input: "average_loss"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_e4885c6db1344b19bd245adee6fa3635/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "dnn/hiddenlayer_0/bias"
        string_val: "dnn/hiddenlayer_0/bias/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_0/kernel"
        string_val: "dnn/hiddenlayer_0/kernel/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/bias"
        string_val: "dnn/hiddenlayer_1/bias/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/kernel"
        string_val: "dnn/hiddenlayer_1/kernel/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/bias"
        string_val: "dnn/hiddenlayer_2/bias/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/kernel"
        string_val: "dnn/hiddenlayer_2/kernel/t_0/Adagrad"
        string_val: "dnn/logits/bias"
        string_val: "dnn/logits/bias/t_0/Adagrad"
        string_val: "dnn/logits/kernel"
        string_val: "dnn/logits/kernel/t_0/Adagrad"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "20100 10 0,20100:0,10"
        string_val: "20100 10 0,20100:0,10"
        string_val: "20 0,20"
        string_val: "20 0,20"
        string_val: "10 20 0,10:0,20"
        string_val: "10 20 0,10:0,20"
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "20 10 0,20:0,10"
        string_val: "20 10 0,20:0,10"
        string_val: "3 0,3"
        string_val: "3 0,3"
        string_val: "10 3 0,10:0,3"
        string_val: "10 3 0,10:0,3"
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "dnn/hiddenlayer_0/bias/part_0/read"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_0/kernel/part_0/read"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/bias/part_0/read"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/kernel/part_0/read"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_2/bias/part_0/read"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_2/kernel/part_0/read"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/read"
  input: "dnn/logits/bias/part_0/read"
  input: "dnn/dnn/logits/bias/part_0/Adagrad/read"
  input: "dnn/logits/kernel/part_0/read"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad/read"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "dnn/hiddenlayer_0/bias"
        string_val: "dnn/hiddenlayer_0/bias/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_0/kernel"
        string_val: "dnn/hiddenlayer_0/kernel/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/bias"
        string_val: "dnn/hiddenlayer_1/bias/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/kernel"
        string_val: "dnn/hiddenlayer_1/kernel/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/bias"
        string_val: "dnn/hiddenlayer_2/bias/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/kernel"
        string_val: "dnn/hiddenlayer_2/kernel/t_0/Adagrad"
        string_val: "dnn/logits/bias"
        string_val: "dnn/logits/bias/t_0/Adagrad"
        string_val: "dnn/logits/kernel"
        string_val: "dnn/logits/kernel/t_0/Adagrad"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "20100 10 0,20100:0,10"
        string_val: "20100 10 0,20100:0,10"
        string_val: "20 0,20"
        string_val: "20 0,20"
        string_val: "10 20 0,10:0,20"
        string_val: "10 20 0,10:0,20"
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "20 10 0,20:0,10"
        string_val: "20 10 0,20:0,10"
        string_val: "3 0,3"
        string_val: "3 0,3"
        string_val: "10 3 0,10:0,3"
        string_val: "10 3 0,10:0,3"
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/bias/part_0"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20100
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "dnn/hiddenlayer_1/bias/part_0"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dnn/hiddenlayer_2/bias/part_0"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "dnn/logits/bias/part_0"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "dnn/logits/kernel/part_0"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 26
}
